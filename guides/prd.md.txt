üß© Product Requirements Document (PRD)
1. Vis√£o Geral
Objetivo:
Automatizar o processo de duplica√ß√£o de ambientes no uMov.me Center, usando script em Python com Selenium, eliminando tarefas manuais repetitivas.

Problema que resolve:
Atualmente, realizar a duplica√ß√£o exige v√°rios cliques e aguardar manualmente (~15 min), gerando erro humano, tempo improdutivo e dispers√£o de foco.

2. Stakeholders
Equipe de TI/DevOps: Usu√°rios do script supondo economia de tempo.

Equipe de Integra√ß√£o: Receber√° ambientes alinhados com seguran√ßa e qualidade.

Ger√™ncia/Opera√ß√µes: Vai acompanhar ganho de produtividade e redu√ß√£o de erros operacionais.

3. Escopo
Inclus√µes:

Login automatizado no ambiente fonte.

Acesso e execu√ß√£o do fluxo "Duplicar Ambiente".

Espera pelo status ‚ÄúPronto‚Äù (~15 minutos).

Acesso ao ambiente clonado.

Gera√ß√£o e captura da chave de API.

Save do token em arquivo .env ou settings.json.

Exclus√µes:

Importa√ß√£o ou migra√ß√£o de dados via API.

Valida√ß√£o do ambiente clonado al√©m do token.

Notifica√ß√µes por e‚Äëmail ou Slack.

4. Requisitos
Funcionais
Login autom√°tico no Center com credenciais seguras.

Navega√ß√£o at√© menu ‚ÄúDuplicar Ambiente‚Äù.

Iniciar duplica√ß√£o e capturar feedback visual.

Aguardar conclus√£o, com timeout configur√°vel.

Obter link do novo ambiente.

Gerar token API no ambiente clonado.

Persistir token localmente.

N√£o-funcionais
Modularidade: main.py + m√≥dulos com max. 100 linhas.

Resili√™ncia: Tratamento de erros, retries, logs e screenshots em falhas.

Qualidade: Coverage via pytest, Page Object Model.

Configur√°vel via .env ou settings.json.

5. Fluxo do Usu√°rio
Executa python main.py com ambiente fonte e destino.

O script faz login e acessa duplica√ß√£o.

Inicia a√ß√£o e espera at√© "Pronto".

Acessa novo ambiente e gera token.

Salva token e exibe no console.

Gera logs e, se erro, salva capturas e aborta.

6. Crit√©rios de Sucesso
‚úÖ Duplica√ß√£o autom√°tica √© conclu√≠da em >95% dos casos.

‚úÖ Token gerado e armazenado adequadamente.

‚úÖ Testes de smoke aprovados.

‚è±Ô∏è Tempo m√©dio de execu√ß√£o ‚â§ 20 min.

üì¶ Modularidade e cobertura ‚â• 80%.

7. Requisitos T√©cnicos & Ferramentas
Linguagem: Python 3.10+

Automa√ß√£o Web: Selenium + ChromeDriver

Testes: pytest

Configura√ß√£o: python-dotenv ou JSON config

Logging: logging ou structlog

Gerenciamento: Git + GitHub

8. Planejamento de Sprint
Sprint 1 (1 semana):

Setup do projeto, login e modulariza√ß√£o.

Sprint 2 (1 semana):

Automa√ß√£o de duplica√ß√£o + espera, retorno de link.

Sprint 3 (1 semana):

Gera√ß√£o e armazenamento de token, testes, logging.

Sprint 4 (1 semana):

Testes coverage, tratamento de erros, documenta√ß√£o final.

9. Depend√™ncias e Restri√ß√µes
Manter ChromeDriver e vers√£o do Chrome atualizados.

Autoriza√ß√£o da uMov.me para acesso via script.

Layout da UI est√°vel (eventuais mudan√ßas exigir√£o manuten√ß√£o).

10. Riscos & Mitiga√ß√µes
Risco	Mitiga√ß√£o
Mudan√ßa no layout da p√°gina	Page Object Model + testes UI
Timeout maior que previsto	Parametrizar timeout e alerta
Credenciais expostas	Armazenar em .env, n√£o em c√≥digo
Erros na duplica√ß√£o	Logs e screenshots para an√°lise